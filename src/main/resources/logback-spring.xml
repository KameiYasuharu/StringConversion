<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- Spring Bootデフォルト構成  -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    
    <!-- 属性定義  -->
    <springProperty scope="context" name="LOG_PATH" source="logging.file.path" defaultValue="./logs"/>
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="LOG_OUTPUT_APP"/>
    <springProperty scope="context" name="LOG_LEVEL_ROOT" source="logging.level.root" defaultValue="INFO"/>
    <property name="MAX_HISTORY" value="30" />
    
    <if condition='property("os.name").contains("Windows")'>
        <then>
            <property name="LOG_HOME" value="${LOG_PATH}/${APP_NAME}" />
        </then>
        <else>
            <property name="LOG_HOME" value="/opt/logs/${APP_NAME}" />
        </else>
    </if>

    <timestamp key="startupTimestamp" datePattern="yyyyMMdd'_'HHmmss" />
    
    <define name="instanceId" class="com.example.stringconverter.initParam.InstanceIdDefiner" />

    <property name="LOG_PATTERN" 
              value="[${instanceId}],%d{yyyy/MM/dd},%d{HH:mm:ss},%d{SSS},%level,%msg%n"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${APP_NAME}_log.csv</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>30MB</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1024</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="FILE" />
    </appender>

    <root level="${LOG_LEVEL_ROOT}">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="ASYNC_FILE" />
    </root>

    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" />

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>



</configuration>